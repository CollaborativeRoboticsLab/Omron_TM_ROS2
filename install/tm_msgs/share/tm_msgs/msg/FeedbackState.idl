// generated from rosidl_adapter/resource/msg.idl.em
// with input from tm_msgs/msg/FeedbackState.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module tm_msgs {
  module msg {
    struct FeedbackState {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        " Connection Status")
      boolean is_svr_connected;

      boolean is_sct_connected;

      @verbatim (language="comment", text=
        " Movement")
      sequence<double> joint_pos;

      sequence<double> joint_vel;

      sequence<double> joint_tor;

      sequence<double> tool0_pose;

      sequence<double> tool_pose;

      sequence<double> tcp_speed;

      sequence<double> tcp_force;

      @verbatim (language="comment", text=
        " Status")
      boolean robot_link;

      boolean is_data_table_correct;

      boolean robot_error;

      boolean project_run;

      boolean project_pause;

      boolean safetyguard_a;

      boolean e_stop;

      boolean camera_light;

      int32 error_code;

      int32 project_speed;

      int32 ma_mode;

      int32 robot_light;

      @verbatim (language="comment", text=
        " IO")
      sequence<uint8> cb_digital_output;

      sequence<uint8> cb_digital_input;

      sequence<float> cb_analog_output;

      sequence<float> cb_analog_input;

      sequence<uint8> ee_digital_output;

      sequence<uint8> ee_digital_input;

      sequence<float> ee_analog_output;

      sequence<float> ee_analog_input;

      @verbatim (language="comment", text=
        " String")
      string error_content;
    };
  };
};
